#!/bin/bash

ClusterYamlFile="$1"
ClusterJson=$(yq -jP r - < "$ClusterYamlFile")


InstanceName=$(echo "$ClusterJson" | jq -r ".[].SlurmConf.ControlMachine")
BootDiskSize=$(echo "$ClusterJson" | jq -r ".[].Controller.BootDiskSize")
Project=$(echo "$ClusterJson" | jq -r ".[].Controller.Project")
Group=$(echo "$ClusterJson" | jq -r ".[].Controller.Group")
ClusterName=$(echo "$ClusterJson" | jq -r "keys[0]")
Zone=$(echo "$ClusterJson" | jq -r ".[].Controller.Zone")
ServiceAccount=$(echo "$ClusterJson" | jq -r ".[].Controller.ServiceAccount")
Network=https://www.googleapis.com/compute/v1/projects/pennbrain-host-3097383fff/global/networks/bsc-host-network
SubNet=https://www.googleapis.com/compute/v1/projects/pennbrain-host-3097383fff/regions/us-east1/subnetworks/${Group}-subnet
ImageSource=ubuntu-1910-eoan-v20200129
BootDiskSource=https://compute.googleapis.com/compute/v1/projects/pennbrain-center/global/images/ubuntu-1910-eoan
ExternalIp=$(echo "$ClusterJson" | jq -r ".[].Controller.ExternalIp")
MachineType=n1-standard-2
SaltState=configure/bsc-compute

CloudInitYamlFile=$(mktemp /tmp/startem-XXXXXX)


CmdArgs=()

if [ -n "$ExternalIp" ]
then
	CmdArgs+=( "--address=${ExternalIp}" )
fi

# --verbosity=none -q

gcloud beta compute instances create $InstanceName				\
	"${CmdArgs[@]}"								\
	--project=${ProjectName} 						\
	--zone=$Zone								\
	--machine-type=$MachineType						\
	--subnet=$SubNet							\
	--network-tier=PREMIUM							\
	--tags=controller,holder                                                \
        --metadata="enable-oslogin=TRUE,SaltState=${SaltState}"			\
	--metadata-from-file=user-data=cloud-init.yaml				\
	--service-account=$ServiceAccount					\
	--maintenance-policy=MIGRATE						\
	--scopes=cloud-platform							\
	--image=ubuntu-1910-eoan-v20200129					\
	--image-project=ubuntu-os-cloud						\
	--boot-disk-size=$BootDiskSize						\
	--boot-disk-type=pd-standard						\
	--boot-disk-device-name=$InstanceName					\
	--reservation-affinity=any

